{
  "language": "Language",
  "intro": "This is a collection of tools to solve geocaching mysteries. If you are new to geoaching go to <a href='https://www.geocaching.com/'>Geocaching.com</a>. If you are new to solving mystery caches read the <router-link to='howtostart'>How to's</router-link>.",

  "errors": {
    "generic": "Somewhing went wrong. Please retry.",
    "noinput": "Please provide some input",
    "nocoords": "No coordinates are specified. Please enter a coordinate.",
    "incorrectcoords": "Error calculating coordinates, please check input and selected format.",
    "invalidinput": "Input could not be converted. Please check selected input.",
    "noresult": "No results found",
    "cannotparse": "Cannot parse input",
    "unknowninput": "Unknown input ",
    "loadingimage": "Error loading image",
    "loadingfile": "Error loading file"
  },

  "labels": {
    "from": "From",
    "to": "To",
    "message": "Message",
    "coordinate": "Coordinate",
    "coordformat": "Coordinate format",
    "distance": "Distance",
    "angle": "Angle",
    "radius": "Radius",
    "variable": "Variable",
    "color": "Color",
    "option": "Option",
    "point": "Point",
    "surface": "Surface",
    "center": "Center",
    "circumference": "Circumference",
    "result": "Result",
    "alphabet": "Alphabet",
    "search": "Search for",
    "sum": "Sum",
    "count": "Count",
    "number": "Number"
  },

  "buttons": {
    "convert": "Convert",
    "calc": "Calculate",
    "search": "Search",
    "format": "Format",
    "reset": "Reset",
    "cancel": "Cancel",
    "save": "Save",
    "get": "Get",
    "check": "Check",
    "show": "Show",
    "showtab": "Show/hide table",
    "showres": "Show/hide results",
    "apply": "Apply",
    "original": "Original",
    "count": "Count",
    "sum": "Totals",
    "showtable": "Show table",
    "undo": "Undo",
    "encode": "Encode",
    "decode": "Decode",
    "download": "Download"
  },

  "colors": {
    "white": "White",
    "black": "Black",
    "red": "Red",
    "blue": "Blue",
    "green": "Green",
    "cyan": "Cyan",
    "magenta": "Magenta",
    "yellow": "Yellow",
    "brown": "Brown",
    "grey": "Grey",
    "darkgrey": "Dark grey"
  },

  "languages": {
    "english": "English",
    "dutch": "Dutch",
    "german": "German",
    "french": "French",
    "spanish": "Spanish"
  },

  "highlights": {
    "bold": "Bold",
    "upper": "Uppercase"
  },

  "menu": {
    "home": "Home",
    "coordinates": "Coordinates",
    "texttools": "Text",
    "ciphers": "Ciphers",
    "codes": "Codes",
    "imagetools": "Images",
    "htmlscanner": "HTML Scanner",
    "comptools": "Programming",
    "mathtools": "Math",
    "other": "More tools",
    "howto": "How to",
    "about": "About"
  },

  "coordinates": {
    "intro": "A collection of tools to convert and calculate coordinates. All tools support a wide range of coordinate systems and notations. You can make projections, calculate lines, triangles and circles. You can make maps or find incomplete coordinates. There is a special tool to help you find the right words for what3words coordinates. You can also solve Reverse Wherigo caches.",
    "convert": {
      "title": "Convert",
      "short": "WGS84, UTM, MGRS, NAD, Dutch Grid, Maidenhead, Geohash, Mapcode, what3words and more",
      "long" : "There are many different coordinate systems in use. Most common is WGS84, which is more or less the standard. Another common one is UTM (Universal Transverse Mercator). Then there are several grid based systems which use x, y based coordinates. Most based grid based systems are regionally based such as the British OGSM grid, the Dutch RD Grid or the Belgian Lambert coordinates. Maidenhead, geohash and Google's Open Location Code are normal coordinates encoded with a hash. Mapcode and what3words are commercial initiatives to simplify coordinates."
    },
    "project": {
      "title": "Project",
      "short": "Project a coordinate",
      "long": "A projection is a coordinate with a given distance and direction (angle) from the given coordinate. Many different coordinate systems are supported. Distances can be specified in meters, kilometer, feet, yards and miles. Angles can be specified in degrees, radians and gon."
    },
    "mapmaker": {
      "title": "Map maker",
      "short": "Map coordinates with marker, label and circle",
      "long" : "Maps a list of coordinates with markers and labels on a map. Optionally draw a circle with a given radius around each coordinate. Ideal for showing possible geocache locations, for placing a geocache or finding a possible location of a mystery cache. Supports many different coordinate systems. Placing of markers and labels can be disabled."
    },
    "incomplete": {
      "title": "Incomplete coordinates",
      "short": "Calculate and plot incomplete coordinates",
      "long" : "Plot and calculate possible co√∂rdinates where one to four numbers are unknown. For each of the unknowns the available options can be specified. A maximum of 500 locations can be shown. Clicking on the coordinate shows a popup with the used variables. The tool works with all available coordinate systems."
    },
    "lines": {
      "title": "Lines",
      "short": "Midpoint, distance, direction, intersection of 1 or 2 lines",
      "long" : "Calculate the midpoint, direction and distance of a line. Calculate point nearest on a line relative to another point. Calculate the intersection of two lines. All points and lines are plotted on the map."
    },
    "triangles": {
      "title": "Triangles",
      "short": "Area, circumference, centroid, orthocenter and other triangle points",
      "long" : "Calculate the area, circumference, centroid, orthocenter, incenter, circumcenter, ninepoints center of a triangle. All points and triangles are shown on the map."
    },
    "circles": {
      "title": "Circles",
      "short": "Intersection points and area of two circles",
      "long" : "Calculate the intersection points and intersection area of two circles. All points and circles are plotted on the map."
    },
    "antipode": {
      "title": "Antipode",
      "short": "The point opposite on the globe.",
      "long" : "The antipode is the point exactly on the opposite side of the earth. To calculate the latitude of an antipode, change the sign and direction of the latitude of the reference point. To calculate the longitude of an antipode, subtract the absolute value of the reference-point longitude from 180 degrees and change the sign and direction of the answer with reference to the reference point."
    },
    "w3w" : {
      "title": "What3words",
      "short": "Convert to, convert from, auto suggest",
      "long": "<p>What3words translates a coordinate in 3 single words. It supports multiple languages. It also has an auto suggest feature for incomplete or wrongly spelled words. When converting a normal coordinate you can select the language of the what3words coordinate. When converting a what3words coordinate the language is irrelevant.</p><p>Auto suggest is slightly more complicated. You can clip the results to a country, using the ISO two letter code, e.g. NL, GB or DE. You can clip the results in a circle around a given coordinate. You can also focus the suggestions relevant from the focus point. Maximum 3 suggestions are returned, sometimes there are none.</p>"
    },
    "revwherigo" : {
      "title": "Reverse Wherigo",
      "short": "Solve reverse wherigo",
      "long": "<p>Resolves reverse wherigo (Waltmeister cartridge only). The tool doesn't check the checksum! Provide the input of three numbers of 6 digits separated by spaces. The tool calculates the reverse coordinate.</p>"
    }
  },

  "codes": {
    "intro": "Codes are simple ways to translate text or numbers. They do not require a key to be solved. The only thing to do is recognize the right code. However recognizing the code might not be that easy. You can use the search tool or browse through the special fonts. Resistor, segment and decabit are codes used for special purposes.",
    "codebook": {
      "title": "Search codebook",
      "short": "Find codes using keywords and tags",
      "long": "Find a code using keywords and tages. Available tags refer to origin of the code, the shapes used and other ways to identify the code. Type a text and/or select one of the tags and press Search."
    }, 
    "fonts": {
      "title": "Special fonts",
      "short": "More than 50 different codes are available as fonts.",
      "long": "<p>A code can be as simple as using a different font. More than 50 fonts are available as fonts. Just type any text and display it in the selected font. Make a screenshot to create your own puzzles. Or simply use it to solve mysteries that use these fonts.</p>"  
    },
    "segment": {
      "title": "Segment display",
      "short": "Segment display, 7, 14 and 16 segments.",
      "long": "<p>Segment displays are used in electronics. Numbers and letters are shown by switching 7, 14 or 16 segments on or off. The segments are identified by letters, e.g. A to G for 7-segment displays. Alternatively 0 and 1 (binary) is used to indicate which segments are off and on.</p><p>Choose the number of segments: 7, 14 or 16. Select the notation of segments either letters or binary. Click Encode to translate input to segment notation, click Decode to translate segment notation back to text.</p>"
    },
    "resistorcode": {
      "title": "Resistor colors",
      "short": "Resistor calculator",
      "long": "<p>Resistors use colors to indicate their value (in Ohms). Colors are easier to read than numbers. There are 3, 4, 5 and 6 band color codes. For the three and four band resistors the first two give a value and the third band is the multiplier. For five and six band resistors the first three give the value and the 4th band is the multiplier. The 5th band is the tolerance and the 6th is the thermal capacity. The color codes are:&nbsp;<span style='text-align: center'><span style='background-color: black; color: white; padding-right: 15px; padding-left: 15px;'>0</span><span style='background-color: brown; color: white; padding-right: 15px; padding-left: 15px;'>1</span><span style='background-color: red; color: black; padding-right: 15px; padding-left: 15px;'> 2 </span><span style='background-color: orange; color: black; padding-right: 15px; padding-left: 15px;'> 3 </span><span style='background-color: yellow; color: black; padding-right: 15px; padding-left: 15px;'> 4 </span><span style='background-color: green; color: black; padding-right: 15px; padding-left: 15px;'> 5 </span><span style='background-color: blue; color: white; padding-right: 15px; padding-left: 15px;'> 6 </span><span style='background-color: violet; color: black; padding-right: 15px; padding-left: 15px;'> 7 </span><span style='background-color: gray; color: black; padding-right: 15px; padding-left: 15px;'> 8 </span><span style='background-color: white; color: black; padding-right: 15px; padding-left: 15px;'> 9 </span></span><br><p>The colors gold and silver are only valid for the multiplier, with gold is x 0.1 and silver is x 0.01. This calculator is for the 5 and 6 band version, select the colors of the first 4 bands. You can use it for the 3 and 4 band version, select black (0) for the first band and then select band 2, band 3 and the multiplier.</p>"  
    },
    "decabit": {
      "title": "Decabit",
      "short": "Decabit uses exactly ten + and - for encoding.",
      "long": "<p>Decabit is a protocol to transmit data across power lines using a series of electronic pulses. It transmits numbers between 0 up to and including 126. The numbers can be interpreted as numbers, as ASCII or anything else, for example positions in the alphabet.</p><p>This tool encodes and decodes decabit. Input/output can be numbers or text. Numbers should be between 0 - 126. Press encode to translate to decabit. Press decode to translate decabit back to text or numbers.</p>"
    } 
  },

  "texttools": {
    "intro": "Tools for text. Calculates word values. Converts ASCII or other codes. Analyze a text. Smart replace helps in solving ciphers. Convert text to numbers and back. Switch between keyboards such as Dvorak. A tool to hussle words.",
    "wordvalue": {
      "title": "Word value & square root",
      "short": "Word value and square root, supports many alphabets, including Scrabble and Vanity code",
      "long" : "A tool to calculate the word value and square root of a text and each word individually. Supports many alphabets, including Greek and Cyrillic, Scrabble and Vanity code. Alphabets can be used in reverse order. Count starts default at one but can also start at zero. Replace diacritics if needed (but please be aware that sometimes diacritics are unique in the used alphabet)."
    },
    "charcodes": {
      "title": "Character codes",
      "short": "UTF8, UTF16, ASCII, Alt codes, codepages, Baudot, Murray and more",
      "long" : "<p>Computers internally use numbers and not letters. A number is translated into a character using a codepage. The most widely used these days is <b>UTF8</b>. <b>ASCII</b> is still frequently used. There are dozen of other codepages. For MS-DOS and Microsoft Windows there are many codepages with regional character sets. <b>Alt codes</b> refer to typing a number on the numeric keypad to display a special character from a Microsoft codepage. There is also an Atari version of Ascii and IBM's proprietary EBCDIC code.</p><p>In telegraphy codes were also used. These <b>Baudot and Murray codes</b> consisted of 5 bits (or holes in a paper tape). The tool can also translate these codes. The Cyrillic version called MTK2 is also supported.</p>"
    },
    "smartreplace": {
      "title": "Smart replace",
      "short": "Crack substitution ciphers, using frequency analysis",
      "long" : "A tool to solve any kind of substitution cipher. It uses frequency analysis to find the most likely matches for the selected language (English, Dutch, German, French and Spanish). Specify the original and replaced characters and the updated text will be shown with highlighted replacements. It can automatically replace the first 8 most likely candidates."
    },
    "analyze": {
      "title": "Analyze text",
      "short": "Number of words, lines, whitespace and all characters in a text",
      "long" : "A tool to analyze a text. Counts the number of words, lines, whitespace , lowercase, uppercase, each letter, each digit and all symbols in a text. Also shows percentages."
    },
    "texttonumbers": {
      "title": "Text to numbers",
      "short": "Text to numbers and vice versa",
      "long" : "A tool to translate text to numbers and vice versa using the position in the alphabet. Supports many alphabets. Optionally use a reverse alphabet and/or start at zero instead of one. A leading zero for numbers below 10 is optional, if it can be omitted safely."
    },
    "keyboards": {
      "title": "Keyboards",
      "short": "Text as if it was typed with a different keyboard",
      "long" : "A tool to convert text as if it was typed with a different keyboard. Supports different keyboard layouts including Azerty, Cyrillic, Dvorak and Colemak."
    },
    "texttoss": {
      "title": "Toss",
      "short": "Toss the letters of each word",
      "long": "Change the order of letters of each word in a text. The option that keeps both the first and last letter is also known as typoglycemia."
    }
  },

  "imagetools": {
    "intro": "Some tools to quickly edit or scan images. Exif scanner shows the metadata of an image. The color picker will show all the details of a selected color. The color editor can do many things, such as filling an area, change contrast or brightness and apply filters. There is a tool to draw an image from number input. And a tool to do crazy things such as flipping half the rows or shifting parts of the image.",
    "exifscanner": {
      "title": "Exif Scanner",
      "short": "Metadata (EXIF) of an image, like GPS, comments, description",
      "long": "Exif reader retrieve the metadata (EXIF and others) from an image. If a GPS location is included it is shown on the map. Also flips or rotates the image."
    },
    "colorpicker": {
      "title": "Color Picker",
      "short": "RGB, hex, CMYK, HSL and HSV color values",
      "long": "A tool that shows the RGB, hexadecimal RGB, CMY(K), HSL and HSV value. Click anywhere in the image to display the values."
    },
    "filltool": {
      "title": "Color editor",
      "short": "Area fill, brightness and contrast, B&W, sepia, filters, color depth.",
      "long": "<p>Replace one color with another. Try to replace large areas with the same color with another to reveal unseen differences in color. Convert the image to grayscale, sepia, invert the image or apply one of the other filters. Reduce the color depth. Change the contrast or brightness.</p><p>Click anywhere in the image to fill the area with the selected fill color. The tolerance defaults to 0. If you increase the tolerance, colors close to the selected color will also be filled. The maximum tolerance is 255 which causes the entire image to be filled. Use the sliders and buttons to apply anyone of the other settings.</p>"
    },
    "pixeldata": {
      "title": "Pixel data",
      "short": "Total of R, G and B, count a specific RGB value",
      "long": "<p>Tool to calculate the total of red, green and blue values. Tool to calculate the number of pixels with a specific RGB value. Also show size and total number of pixels of the image.</p><p>Works perfectly with PNG files but seems to have an issue with JPG.</p>"
    },
    "pixelbuild": {
      "title": "Pixeldraw",
      "short": "Draw an image from numbers",
      "long": "<p>Tool to draw an image from a text with up to 10 different characters. Each character representing a different color. Example is a sequence of 0 and 1 representing a QR code. Another example would be a color drawing where the image appears if all colors are filled.</p><p>Height and width are optional. If height is empty, the number of lines in the input represents the height. If width is emptt, the length of the first line represents the width. You can select which character represents which color.</p>"
    },
    "imagetransform": {
      "title": "Transform",
      "short": "Flip horizontal and vertical (whole picture or parts), shift rows or columns",
      "long": "Shift each row or column a few pixels (cumulative). Flip half the rows or columns (each row or column one or more pixels wide). Mirror the entire image."
    },
    "textextractor": {
      "title": "Text extractor",
      "short": "Find possible texts in any file",
      "long": "The tool tries to locate text by looking at printable charactters (ASCII 32 t/m 126). The minimum lenght of the string should be specified. The maximum number of search results and the start position can also be set. For example try to find long strings first and then use start position to search for smaller strings. Large files can take some time to scan or might fail to load entirely."
    }
  },

  "othertools" : {
    "intro": "Another collection of tools for various topics. Solving Sudoku or Mastermind. A unit convertor for hundreds of units. Tables of the periodic system, countries of the world, states of the USA, European provinces and DNA codes.",
    "sudokusolver": {
      "title": "Sudoku solver",
      "short": "Solver for Sudoku and Sudoku X, sizes 2 and 3",
      "long":  "Solver for  Sudoku and Sudoku X, sizes 2 and 3. Size 4 disabled because of server load. Fill the squares or alternatively type the hints as row column number separed by comma, e.g. 125,243,254"
    },
    "mmsolver": {
      "title": "Mastermind solver",
      "short": "Mastermind solver for 3 to 6 pins, 4 to 9 colors",
      "long":  "Mastermind is a logic game. The objective is to determine a code (a set of colors). For each attempt the number of correctly placed pins (location and color okay) as well ass the number of correct colors (color is okay but in the wrong position) is given. By using this information for the next attempt the combination can be determined. The original game had 5 positions (or pins) and used 8 colors. The most popular variant has 4 pins and 6 colors. The colors can be made unique, but this is not mandatory. This tool uses numbers instead of colors. Provide the number of pins, the number of colors and all the tried combinations with the number of correctly placed pins and colors."
    },
    "periodictable": {
      "title": "Periodic table",
      "short": "Chemical element numbers, symbols and names",
      "long": "<p>The periodic table is a system for classifying chemical elements. Each element has a number, a symbol to represent the element and a name. Chemical elements are also classified as a belonging to a certain group, period and block, depending on their chemical configuration. Please note that elements 119 and higher have only so-called systematic names. Also note that elements 110, 111 and 112 were previously Uun, Uuu and Uub.</p><p>This tool will search elements on number, symbol or name. Invalid input is simply ignored. Numbers and names have to be separated by spaces. Symbols can be typed without spaces and use the official notation: first a capital and then if present a lowercase letter, e.g. HSAgCoCCr. Pay attention as Co means Cobalt, but CO is Carbon and Oxygen.</p>"
    },
    "countries": {
      "title": "Country codes",
      "short": "Countries and named territories with flags",
      "long": "<p>List of all the countries and named territories in the world according to ISO3166. A total of 249 countries with their names, currencies and flags. Countries also have a 2-letter code (in most cases this is the same as the internet domain), a 3 letter code and number according to ISO3166. All countries also have a dialing code for international phone traffic and most have a vehicle registraion code. The names used are the commom names and not the official ones, additions like 'Republic of' and so on are not used here. The currencies are the simple names, without the common prefixes denoting the origin, e.g. Australian dollar or Mexican peso. The currency codes are the latest, but be aware these codes do change sometimes.</p><p>These codes and numbers, as well as word values of countries are often used in geocaches. You can also browse the entire table with countries and their details (including flags).</p><p>You can type multiple codes and numbers. The 2 and 3 letter codes don't need a space in between, the numbers do. If the result looks good but not perfect, you can check online resources for alternative spellings, names and so on.</p>"
    },
    "usastates": {
      "title": "US States",
      "short": "States of the US including flags",
      "long": "<p>List of all the states of the United States of America, inclusief flag. The code is both the code used by US Postal Services as well as the code according to <a href='https://en.wikipedia.org/wiki/ISO_3166-2:US'>ISO3166-2:US</a>. Also shown are the ranking according to area, ranking according to joined data and the number of representatives in the House.</p><p>You can type multiple codes and numbers. The USPS Code doesn't need a space in between. If the result looks good but not perfect, you can check online resources for alternative spellings, data, names and so on. The state name contains a link to the wikipedia page.</p>"  
    },
    "countryregions": {
      "title": "Regions of nl, be, de and fr",
      "short": "Regions of the Netherlands, Belgium, Germany and France including flags",
      "long": "<p>Regions of the Netherlands, Belgium, Germany and France including flags. The name links to the Wikipedia in the language of the country (Dutch, German or French).</p>"  
    },
    "unitconvertor": {
      "title": "Units",
      "short": "Length, area, volume, temperature, power, angle and speed convertor",
      "long": "Unit convertor converts a wide range of units. Units are organized in categories for units that measure the same event, e.g. length or temperature. It won't be possible to convert between categories. All the common units are supported, but also a lot of lesser known or now obsolete units."  
    },
    "dnacode": {
      "title": "DNA Code",
      "short": "Three letter codes of DNA and RNA",
      "long": "<p>DNA or RNA codons are represented with 3 letters. Whenever you see a bunch of letters with lots of A, C, G, T or U you could be dealing with codons. Sometimes other letters are used as well to indicate combinations of codons. For example Y means T or C, so TAY means TAT or TAC. Type the codons in three letter chunks and press search.</p><p>Some background info. Codons are a combination of three nucleo acids. DNA are composed of A (Adenine), C (Cytosine)and G (Guanine) and T (Thymine). RNA shares three of the four nucleo acids but T is replaced with and U (Uracil). Most codons define an amino acid, which have a name, a three letter abbreviation and a single letter. Some codons are start and stop signals. Some codons are used for the same amino acid. A piece of RNA or DNA contains several codons, each representing an amino acid. The resulting chain of amino acids builds a proteine. For more information read <a href='https://en.wikipedia.org/wiki/DNA_and_RNA_codon_tables'>this</a>.</p>"
    }
  },

  "cp": {
    "short": " and 50 other ciphers",
    "info": "Select one of the ciphers or codes below. The appropriate keys will be shown. Fill in the keys and press decode or encode. In most cases converting to uppercase works best. You can remove all the characters that are not in the alphabet. This is often necessary. The encoded message can be formatted in blocks with a separator (which is common). To decode you have to remove the formatting in most cases.",
    "cipher": "Cipher",
    "gensq": "Generate square",
    "genalp": "Generate alphabet",
    "phencmsg": "Encrypted message",
    "toupper": "Uppercase",
    "remnonalp": "Remove non alphabet",
    "repl": "Replace",
    "errdec": "Message could not be decoded, please check.",
    "errenc": "Message could not be encoded, please check.",
    "sep": "Separator",
    "remform": "Remove format",
    "bs": "Block size",
    "adfgvx": {
      "info": "The ADFGX(V) cipher is Polybius cipher. A 5x5 or 6x6 square is used. The result is fractionated and the columns are transposed using the key.",
      "k1": "Column transposition key:"
    },
    "affine": {
      "info": "The Affine cipher is a substitution cipher. It uses the function ax + b to calculate the ciphered text. The value of A must be coprime with the length of the alphabet.",
      "k1": "A (greater than 1):",
      "k2": "B (greater than 0):"
    },
    "amsco": {
      "info": "AMSCO Encryption consists in writing a text in a grid according to a cutting sequence (2,1) then use a permutation key to switch columns.",
      "k1": "Column transposition key:"
    },
    "atbash": {
      "info": "Atbash is a very simpel cipher where each letter is replaced with the one in the reversed alphabet, so A=Z, B=Y ..."
    },
    "atomtom": {
      "info": "A-tom-tom is a very simple subsitution cipher where each letter is replaced with a combination of forward / and backward \\ slashes"
    },
    "autokey": {
      "info": "An autokey cipher (also known as the autoclave cipher) is a cipher that incorporates the message (the plaintext) into the key. This one uses Vigenere.",
      "k1": "Enter key:"
    },
    "bacon": {
      "info": "Each character is replaced by 5 characters (normally A and B). There are two versions. Versions 1 uses the same combination for I and J, and U and V. Version 2 is different for each letter. You can also hide Bacon in any text using a different font for B or using lower- and uppercase for A and B.",
      "k1": "Version (1 or 2)",
      "k2": "Value to use for A:",
      "k3": "Value to use for B:"
    },
    "bazeries": {
      "info": "The Bazeries cipher is a polygraphic cipher coding 2-letters at a time. The alphabet must be a square number characters. It uses two squares. The keys are optional to generate the squares. The numeric key is used for transpositioning and to generate the 2nd square if key 2 is empty.",
      "k1": "Key for square 1:",
      "k2": "Key for square 2:",
      "k3": "Numeric key:"
    },
    "beaufort": {
      "info": "The Beaufort cipher, created by Sir Francis Beaufort, is a substitution cipher similar to the Vigen√®re cipher, with a slightly modified enciphering mechanism and tableau. Keyword is required.",
      "k1": "Enter key:"
    },
    "bibibinary": {
      "info": "Bibi-binary is a numeric encoding system. It converts the number to hexadecimal and translates into something that pronounces funny. Only numbers are allowed."
    },
    "bifid": {
      "info": "The bifid cipher uses a Polybius square to fractionate each plaintext letter into a bigram, mixes the constituents of the bigrams, and then applies the Polybius square in reverse to turn these mixed bigrams into ciphertext letters.",
      "k1": "Enter key:"
    },
    "burrowswheeler": {
      "info": "The Burrow Wheeler cipher is a transposition cipher. It uses a character to indicate end-of-file. This on is mandatory.",
      "k1": "End of file character:"
    },
    "cadenus": {
      "info": "The Cadenus cipher is a columnar transposition. The key both reorders columns and sets the starting point of each column. The message must be a 25 * keylength characters.",
      "k1": "Columnar transposition key:"
    },
    "caesar": {
      "info": "The Caesar cipher is a classic substitution cipher. Each letter is replaced with a letter a number of positions to the right. ROT13 is the same as a Caesar cipher with a shift of 13.",
      "k1": "Shift:"
    },
    "rot13": {
      "info": "The Caesar cipher is a classic substitution cipher. Each letter is replaced with a letter a number of positions to the right. ROT13 is the same as a Caesar cipher with a shift of 13.",
      "k1": "Shift:"
    },
    "chaocipher": {
      "info": "The chaocipher is polyalphabetic cipher with continuously changing alphabets. It was invented in 1918 by John F. Byrne.",
      "k1": "Left starting alphabet:",
      "k2": "Right starting alphabet:"
    },
    "collon": {
      "info": "Collon uses a grid and convert letters into bigram. The bigram is taken from the first/last row/column in the grid. The period is then used for fractionation.",
      "k1": "Select order of digrams:",
      "k2": "Key to generate Polybius squares:",
      "k3": "Period:",
      "s1": {
        "rfcl": "Row first, column last",
        "rlcl": "Row last, column last",
        "rfcf": "Row first, column first",
        "rlcf": "Row last, column first",
        "clrl": "Column last, row last",
        "clrf": "Column last, row first",
        "cfrf": "Column first, row first",
        "cfrl": "Column first, row last"
      }
    },
    "columnartransposition": {
      "info": "Columnar transposition writes the message in columns, reorders it and writes the result column after column",
      "k1": "Columnar transposition key:"
    },
    "condi": {
      "info": "The condi cipher (consecutive digrams) uses digrams to calculate the offset for the next letter.",
      "k1": "Key for the cipher alphabet:",
      "k2": "Initial offset:"
    },
    "digrafid": {
      "info": "A fractionated cipher using a tableau in which two alphabets are organized in grids (of 3x9 and 9x3) with 27 characters (ABCDEFGHIJKLMNOPQRSTUVWXYZ#) are mixed. The plaintext is divided into digraphs, and the digraphs are written in groups, the number of digraphs in each group being the period of the cipher",
      "k1": "Key for the first grid:",
      "k2": "Key for the second grid:",
      "k3": "Period:"
    },
    "foursquare": {
      "info": "The foursquare cipher is a polygraphic substitution cipher that replaces diagrams using two Polybius squares.",
        "k1": "Key square 1:",
        "k2": "Key square 2:"
    },
    "gcid": {
      "info": "Geocache id, a.k.a base 31, translates a geocache id (a number) to its geocache code like GC001. You can enter multiple geoaches or ids."
    },
    "goldbug": {
      "info": "The Gold-Bug cipher was included in a short story by Edgar Allan Poe and which was published in 1843. It is a simple substitution cipher."
    },
    "graycode": {
      "info": "The reflected binary code (RBC), also known just as reflected binary (RB) or Gray code after Frank Gray, is an ordering of the binary numeral system such that two successive values differ in only one bit (binary digit).",
      "k1": "Number of digits:"
    },
    "gromark": {
      "info": "The gromark uses the key to reorder the alphabet and then uses the same key for columnar transposition of the cipher. The 5-digit primer is used to determine the shift of each letter.",
      "k1": "Key:",
      "k2": "Primer (5 digits)"
    },
    "gronsfeld": {
      "info": "The Gronsfeld cipher a Vigenere cipher using a numeric key.",
      "k1": "Enter key (numeric):"
    },
    "kennycode": {
      "info": "Kenny code is based on the mumbling of the Southpark character. Each letter is encoded with a combination of m, p and f (fff is not used)."
    },
    "monomedinome": {
      "info": "The Monome-dinome cipher uses a 24 char alphabet. The first key is used to generate a 3x8 square. The second key is used to detemine the numbers for the rows and columns.",
      "k1": "Key to reorder the alphabet:",
      "k2": "Key for transposition (min 10 chars):"
    },
    "morbit": {
      "info": "Morbit first translates the message into Morse. Then the morse code is split into couples of 2 characters, which are translated into numbers using a 9-digit key.",
      "k1": "Enter key (9 letters):"
    },
    "morse": {
      "info": "Morse code is well known. It uses short and long beeps (. and -) to transmit messages. This one also does morse for numbers and punctuation."
    },
    "myszkowski": {
      "info": "The Myszkowski cipher is a columnar transposition that uses a key with double letters. Plaintext columns with unique letters are transcribed downward; those with recurring letters are first transcribed left to right.",
      "k1": "Key for columnar transposition (should contain double letters):"
    },
    "nicodemus": {
      "info": "The Nicodemus cipher first uses columnar transposition with the given key. The message is then encoded with Vigenere using the same key. The result is written column by column in blocks of 5 letters.",
      "k1": "Key for columnar transposition and Vigenere:"
    },
    "nihilist": {
      "info": "The Nihilist cipher is a Polybius cipher. The first key is used to generate a 5x5 square. The second key is added to the generated numbers. The alphabet must be 25 characters and both keys are required.",
      "k1": "Key to create Polybius square:",
      "k2": "Key to be added:"
    },
    "nihilisttransposition": {
      "info": "The Nihilist transposition cipher is a columnar followed by a row based transposition, using the same key for both. The transposed grid can be read by rows or columns. The message size equals square of the key length.",
      "k1": "Key for columnar transposition:",
      "k2": "Read by rows or columns:",
      "s1": {
        "row": "Rows",
        "col": "Columns"
      }
    },
    "onetimepad": {
      "info": "The one time pad has a key with the same length as the message. It is the only truly unbreakable cipher (if you never reuse the pad).",
      "k1": "Enter pad:"
    },
    "phillips": {
      "info": "The Phillips cipher is based on a Polybius square whose rows, columns or both are reordered to form 8 different squares. The plaintext is enciphered using each square in turn for groups of 5 letters.",
      "k1": "Enter key:"
    },
    "playfair": {
      "info": "The Playfair cipher is a polygraphic cipher coding 2-letters at a time. The alphabet must be a square number characters. The key is optional and used to generate the square.",
      "k1": "Enter key:"
    },
    "polybius": {
      "info": "The Polybius cipher uses a 5x5 (or 6x6) square. The rows and columns are normally numbered 1 to 5 (or 1 to 6) but this can be changed. The alphabet must be 25 or 36 characters and both keys are required.",
      "k1": "Rows:",
      "k2": "Columns:"
    },
    "pollux": {
      "info": "The Pollux cipher translates a message into morse and then replaces the dot, hyphen and word breaks with a randomly selected character.",
      "k1": "Characters for .:",
      "k2": "Characters for -:",
      "k3": "Characters for x:"
    },
    "porta": {
      "info": "The porta cipher is a polyalphabetic cipher which uses 13 alphabets.",
      "k1": "Enter key:"
    },
    "portax": {
      "info": "Portax is a polygraphic (replaces digrams), polyalphabetic (it shifts the alphabet), transposition (rows to columns) cipher.",
      "k1": "Enter key:"
    },
    "ragbaby": {
      "info": "Using a selected keyword, construct a mixed alphabet. Keeping word divisions, the letters of the plaintext are numbered sequentially beginning with the first character of each word.  Ciphertext characters are obtained by taking the letter that is the indicated number of places to the right.",
      "k1": "Enter key:"
    },
    "railfence": {
      "info": "The railfence cipher is a transposition cipher using a zigzag pattern.",
      "k1": "Number of rails (greater than 1):",
      "k2": "Initial offset:"
    },
    "redefence": {
      "info": "The redefence cipher is a transposition cipher. It is the generic form of the railfence cipher.",
      "k1": "Number of rails (greater than 1):",
      "k2": "Initial offset:",
      "k3": "Sequence of rails:"
    },
    "reverse": {
      "info": "Reverse the message"
    },
    "reversewords": {
      "info": "Reverse each word of the message"
    },
    "rot5": {
      "info": "ROT5 is a simple Caesar cipher that just uses digits. Default it has a shift of 5.",
      "k1": "Shift:"
    },
    "rot47": {
      "info": "ROT47 is a Caesar cipher that uses an alphabet with lower- and uppercase, digits and some symbols (ASCII karakters 33 t/m 126). Default it has a shift of 47.",
      "k1": "Shift:"
    },
    "scytale": {
      "info": "Scytale is a very basique transposition cipher used in ancient Greece and by spartans. It uses a cylinder and a band characterized by its number of turns around the cylinder.",
      "k1": "Number of turns:"
    },
    "skip": {
      "info": "The skip cipher is a transposition cipher that consists of extracting the letters of a message every n characters (by jumping n characters). When the end of the message is reached, resume at the beginning (loop).",
      "k1": "Skip value:",
      "k2": "Start at:"
    },
    "substitution": {
      "info": "The generic substitution uses a random reordered alphabet. If you don't know it you can better use the Smart Replace tool.",
      "k1": "Substitutes:"
    },
    "syllabary": {
      "info": "The Syllabary cipher was introduced by G-MAN (Robert J Friedman) in the May-June 2012 issue of the Cryptogram magazine. It is based on a standard 10x10 Key-Square containing all 26 letters and all 10 digits, plus a number of 2-letter and 3-letter combinations. Words can usually be represented in more than one way by row and column coordinates. For example AMSTERDAM can be encrypted as A M ST ER DA M but also as A M S TER D A M. This algorithm always takes the longest matches first. Decryption works always as long as the code is valid. The rows and columns are default numbered 0123456789 but they can be numbered anyway you like.",
      "k1": "Key to generate square",
      "k2": "Left (row) labels",
      "k3": "Top (column) labels"
    },
    "tapir": {
      "info": "TAPIR is the name of a substitution table that was used in the National People‚Äôs Army as well as the Ministry of State Security of the German Democratic Republic. It replace single letters, some digrams, numbers and some special characters."
    },
    "trifid": {
      "info": "The trifid cipher uses a table to fractionate each plaintext letter into a trigram, mixes the constituents of the trigrams, and then applies the table in reverse to turn these mixed trigrams into ciphertext letters. The alphabet must be 27 long.",
      "k1": "Enter key:"
    },
    "trisquare": {
      "info": "The trisquare cipher uses three polybius squares and encodes digrams (2 letters) into trigrams (3 letters).",
      "k1": "Enter key square 1:",
      "k2": "Enter key square 2:",
      "k3": "Enter key square 3:"
    },
    "vatsyayana": {
      "info": "The Vatsyayana or Kamasutra cipher uses pairs of the letters who replace each other.",
      "k1": "First half:",
      "k2": "Second half:"
    },
    "vigenere": {
      "info": "The Vigen√®re cipher is a method of encrypting alphabetic text by using a series of interwoven Caesar ciphers, based on the letters of a (required) keyword. It employs a form of polyalphabetic substitution.",
      "k1": "Enter key:"
    },
    "zebra": {
      "info": "ZEBRA is the name of a substitution table that was used in the National People‚Äôs Army as well as the Ministry of State Security of the German Democratic Republic. It replace single letters including German diacretics, some digrams, some trigrams, numbers and some special characters."
    },
    "zygazyfa": {
      "info": "The Zygazyfa cipher was created by Ray Crowther for fun. He uses it in some of his geocaches. It is a polyalphabetic cipher using a kind of autokey.",
      "k1": "Enter key:"
    }
  },

  "mathtools": {
    "intro": "Mathematical and arithmetic tools. Decimals of constants like pi. Calculator for very large binary, octal, decimal and hexadecimal numbers. Some well known series like Fibonacci and Hailstone. Primes, GCD and LCM and prime factors. A solver for cryptarithms.",    
    "baseconvert": {
      "title": "Base converter",
      "short": "Binary, decimal, hexadecimal or any base from 2 to 36.",
      "long" : "A tool to convert numbers from one base to another. Supports any base from 2 (binary) to 36. Optionally change the characters to use. Multiple numbers can be entered separated by spaces."
    },
    "decimals": {
      "title": "Decimals",
      "short": "Decimals of ùúã, e, ùúè, œÜ, Œ≥, ‚àö2, ‚àö3, Œ∂(3)",
      "long" : "<p>A tool to search decimals of ùúã, e, ùúè, œÜ, Œ≥, ‚àö2 and ‚àö3. The count starts at the first decimal (so to say after the dot). The first 1,000,000 digits are available.</p><p>All of these numbers are irrational, which implies that any sequence of numbers appears somewhere between the decimals. The following constants are available. Pi or ùúã. The natural number e. Tau or 2ùúã. The golden ratio  or œÜ or phi. The Euler-Mascheroni constant or Œ≥. The square roots of 2 and 3 (‚àö2 and ‚àö3). The constant of Ap√©ry or Œ∂(3) or zeta(3). The Gauss's constant and Catalan's constant both also denoted as G. The lemniscate constant.</p>"
    },
    "primes": {
      "title": "Primes",
      "short": "Primes",
      "long" : "This tool checks if a number is prime or not. The max number to be checked is 2^53. It shows the prime number at a given position or shows the position of a given prime. The first 865,000 primes are available. Get prime factors."
    },
    "romans": {
      "title": "Roman numbers",
      "short": "Roman numbers",
      "long": "This tool converts roman numbers to decimal numbers and back. The maximum roman number is 3999. Roman numbers use the following characters MDCLXVI. It is possible to enter multiple numbers divided by spaces or something else."
    },
    "fibonacci": {
      "title": "Fibonacci",
      "short": "First 500 Fibonacci numbers.",
      "long" : "The Fibonacci sequence starts with 1, 1. The next number is the addition of the previous two. So 1+1=2, 1+2=3, 2+3=5 and so on. The numbers get really large really quickly. The first 500 Fibonacci numbers are available."
    },
    "primegcdlcm": {
      "title": "GCD and LCM",
      "short": "Greatest common divisor or least common muliple of one or more numbers. Also gives the prime factors",
      "long" : "This tool finds the Greatest Common Divisor (GCD) and least common multiple (LCM). It will also list the prime factors of each number. You can type multiple numbers. Please be aware that very large numbers can take some time to calculate."
    },
    "formulasolver": {
      "title": "Cryptarithm",
      "short": "Cryptarithm or alphametics are formulas like SEND + MORE = MONEY",
      "long": "<p>Cryptharithms are also known as alphametics or verbal arithmetic. It solves equations were letters represent numbers, e.g. CHECK + THE = TIRES. By default numbers are unique (for each number there is only one letter). By default all calculations are decimal. You can change the number base, but in most cases this is not needed.</p><p><b>Warning:</b> Generating all these formulas and evaluating them is a lot of work and depending on your computer it can take some time for the answers to show. Be patient.</p>"
    },
    "numberprop": {
      "title": "Number properties",
      "short": "Properties of a number, e.g. prime, fibonacci, lucky, deficient, perfect, odd, even and more",
      "long" : "This tool checks if the given number has certain properties. Please be aware that very large numbers can take some time to calculate. The maximum number is 1,000,000,000. Properties include prime, fibonacci, odious, evil, lucky, perfect, deficient, pentagonal, squarefree and others."
    },
    "bignum": {
      "title": "Big number calculator",
      "short": "Calculator for very very large integers",
      "long": "<p>A calculator for very large numbers. Only integers are accepted. You can either enter decimal, binary, octal or hexadecimal numbers. All operators work als you would expect, except division. Division always truncates the result (instead of rounding to the nearest integer). All logical functions are bitwise logical operations.</p>"
    },
    "nimbers": {
      "title": "Nimbers",
      "short": "Product and sum of two nimbers",
      "long" : "Nimbers are not numbers, but you can add and multiply them. They are used in combinatorial game theory (CGT). Enter two numbers and the product and sum will be calculated."
    },
    "sequences": {
      "title": "Sequences",
      "short": "Hailstone, Conway, Niven, Golomb and others.",
      "long" : "This tool generates the n-th term of some well known sequences, such as Hailstone, Conway, Golomb and Niven. These are just a few of ten of thousands of documented integer sequences. If the one you need is not here, try the <a href='http://oeis.org'>Online Encyclopedia of Integer Sequences</a>. You can search OEIS on words, but also on the first few numbers of the sequence."
    },
    "palindrome": {
      "title": "Palindrome",
      "short": "How many reverse additions does it take to become a palindrome",
      "long" : "A palindrome number is a number that is the same backwards. This tool calculates how many times does it takes for a number to become a palindrome by adding the reverse number. Most numbers get there rather quickly but some take longer (this algorithm stops after 100 tries)."      
    }
  },

  "comptools" : {
    "intro": "A collection of tools used in programming and computers. There are severals way of coding numbers, characters and binary data. Encryptions and hashes are also supported. Several so called esoterioc programming languages (esolangs) can be executed as well.",
    "compbrainfuck": {
      "title": "Brainfuck",
      "short": "Brainfuck, Ook! and Spoon programs",
      "long":  "<p>Brainfuck is an esoteric programming language (esolang) which is totally unreadable on purpose. It has eight commands + - > < . , [ and ]. Sometimes i, d, l and r are used instead of +, -, > and <. The shorthand notation allows numbers which repeat the previous command a number of times. </p><p>Ook! is the same as Brainfuck but with every command replaced with orang utan sounds. Spoon is the same as brainfuck but each command is an unambiguous sequence of 0 and 1. There are plenty other so-called <a href='https://esolangs.org/wiki/Trivial_brainfuck_substitution'>trivial Brainfuck substitutions</a> around, some of them can be executed here.</p>"
    },
    "compbcd": {
      "title": "BCD",
      "short": "Binary Coded Decimals in different notations",
      "long":  "<p>BCD (Binary Coded Decimals) is a way to code numbers. By default it uses binary codes for each digit, so 4571 becomes 0100 0101 0111 0001. Binary codes can be packed into 8 digit groups. The example becomes 01000101 01110001. Or the 4 digits are filled to 8 digits like 11110100 11110101 11110111 11110001.</p><p>There are also other ways to code decimal numbers such as Aiken, Excess-3, Excess-6 or different Gray codes, which also use 4 bits per number but instead of binary some other table is used. More info can be found <a href='https://en.wikipedia.org/wiki/Binary-coded_decimal'>here</a>.</p>"
    },
    "compdeadfish": {
      "title": "Deadfish",
      "short": "Deadfish is a pretty useless programming language",
      "long":  "<p>Deadfish is a programming language with only 4 instructions. Increment with 1 (i), decrement with 1 (d), square (s) and output (o). The counter start at 0, if it reaches -1 or exactly 256 it resets to 0. Sometimes xdkc are used instead of idso. Both instruction sets are supported.</p>"
    },
    "encryption": {
      "title": "Encryption",
      "short": "Okto3, AES, DES, Rabbit, HMAC and other digitial encryptions",
      "long": "<p>All of these are basically very complex ciphers used by computers to transmit and store information safely. They are the successors of the handciphers of the 20th century. All of these codes require a key. There are also advanced options which control the alghorithm, but on most occassions you should keep the default settings.</p><p>DES used to be the standard in computer encryption but has found to be insecure. AES is most common these days. Rabbit and RC4 are also in use. Okto3 encrypts the input to a series of decimal numbers and is pretty useless for anything else but geocaches.</p>"
    },
    "hashes": {
      "title": "Hashes",
      "short": "MD5, SHA-1, SHA-2 (SHA256 and SHA512), SHA-3 and RIPEMD160 hashes",
      "long": "<p>Hashes are like digital signatures. They only work one way. The message is hashed into a code (represented here as a hexadecimal string). The authenticity of a message can be confirmed by hashing the message again and compare it with the distributed hash. There are a couple of common hash algorithms. MD5 has been around for a while but is now considered insecure. SHA-1 is most common these days. SHA-3 is the most recent and most secure one.</p><p>Enter a message and press Calculate to get the hash. Optionally the hash is verified and the result is shown.</p>"
    },
    "cow": {
      "title": "COW",
      "short": "COW programming language",
      "long": "<p>The COW programming language is an esoteric programming language created by Sean Heber in 2003. It is a Brainfuck variant designed humorously with Bovinae in mind. COW has twelve instructions (four more than Brainfuck) and is Turing-complete. Most instructions are moos, only the capitalization varies: mOo, moO, mOO, Moo, and so on. MMM, OOO, oom and OOM are the exceptions. All other character combinations are ignored and treated as comments. The debugger writes information to the developers console of the browser, so the code can be debugged.</p>"
    },
    "beatnik": {
      "title": "Beatnik",
      "short": "Beatnik programming language",
      "long": "Beatnik calculates the Scrabble value of each word. The value is then treated as a command. Words consist only of letters, so Boeing747Dreamliner gives two words (and two commands). Multiple Scrabble versions are available, but English is the most likely choice. More info can be found <a href='https://esolangs.org/wiki/Beatnik'>here.</a></p><p>The debugger writes information to the developers console of the browser, so the code can be debugged.</p>"
    },
    "compbintotext": {
      "title": "Binary to text",
      "short": "Base64, base32, Bitcoin, Ripple, ascii85, uuencode, base16, base91",
      "long": "<p>Binary to text encodings take the input and converts each of its bytes (or 8 bits) to something else. This is done to make the binary stuff transferable using mail or other protocols. This might be pretty useless for text but it is pretty useful for images, videos or basically any other file that would otherwise get corrupted during transfer. Base64 is most common these days.</p><p>Carriage returns and linefeeds are always removed from the input, which is common for binary to text encoding. Spaces however are kept (except for binary, decimal and hexadecimal). Binary, decimal and hexadecimal inputs are exactly 1 number, spaces might be added for readability but are otherwise ignored. So 123 123 is really the integer 123123. And 3A B4 is really the hexadecimal number 3AB4. </p>"
    },
    "duckspeak" : {
      "title": "Duckspeak",
      "short": "A lot of nak",
      "long": "Duckspeak looks like a duck is speaking with a lot of Nak. It takes hexadecimal input and converts 0-9A-F to duckspeak. The input can also be text or decimal numbers (smaller than 255), which is converted first to hexadecimal. Decode does the reverse thing."
    }

  },

  "cdbook": {
    "availtags": "Available tags",
    "pagesfound": "codes found"
  },

  "cdfonts": {
    "selfont": "Select font",
    "fontsize": "Select fontsize",
    "selcolor": "Select color",
    "lineheight": "Line height",
    "standard": "Standard"
  },

  "segment": {
    "segsize": "Number of segments",
    "input": "Segments as letters or as binary",
    "letters": "Letter notation",
    "binary": "Binary notation"
  },

  "exifscanner": {
    "nogps": "No GPS from camera",
    "gps": "GPS from camera",
    "error": "Error loading image or EXIF data",
    "noinfo": "No info",
    "info": "Image info",
    "cinfo": "Camera info",
    "desc": "Description",
    "ainfo": "Author info",
    "filename": "Filename",
    "filetype": "Type",
    "size": "Size",
    "width": "Width",
    "height": "Height",
    "npixels": "# pixels",
    "date": "Date & time",
    "datec": "Date & time created",
    "camera": "Camera",
    "lens": "Lens",
    "aperture": "Aperture",
    "shutter": "Shutter",
    "title": "Title",
    "subject": "Subject",
    "about": "About",
    "keywords": "Keywords",
    "comment": "Comment",
    "artist": "Artist",
    "creator": "Creator",
    "author": "Author",
    "copyright": "Copyright"
  },

  "colorpicker": {
    "selcolor": "Selected color",
    "rgbval": "RGB values",
    "alpha": "Alpha channel",
    "hexval": "RGB hexadecimal",
    "hex": "RGB hex",
    "hslval": "Hue, Saturation, Lightness",
    "hue": "Hue",
    "sat": "Saturation",
    "lum": "Lumination",
    "hsvval": "Hue, Saturation, Brigthness",
    "bri": "Brightness",
    "cmykval": "CMYK values",
    "cmyval": "CMY values"
  },

  "filltool": {
    "selfill": "Fill color",
    "tol": "Tolerance",
    "fill": "Color fill",
    "fillinfo": "Click anywhere in the image to fill an area.",
    "filter": "Filters",
    "conbri": "Brightness & contrast",
    "brigh": "Brightness",
    "contr": "Contrast",
    "gray1": "Grayscale (Averaged)",
    "gray2": "Grayscale (Luminance)",
    "invert": "Invert",
    "sepia": "Sepia",
    "colordepth": "Reduce color depth",
    "colors": "colors"
  },

  "pixeldata": {
    "sum": "To calculate the sum of the red, green and blue values press Totals",
    "count": "To count the number of pixels select values for red, green and blue and press Count"
  },

  "pixelbuild": {
    "input": "Text input",
    "options": "Options"
  },

  "imagetransform": {
    "shift": "Shift",
    "shiftinfo": "Select the number of pixels to shift each row/column.",
    "shiftr": "Shift row #pixels",
    "shiftc": "Shift column #pixels",
    "fliphalf": "Flip half",
    "flipinfo": "Select the width in pixels of row/column.",
    "flipr": "Flip rows of #pixels",
    "flipc": "Flip columns of #pixels",
    "transform": "Mirror image",
    "fliph": "Flip horizontal",
    "flipv": "Flip vertical"
  },

  "textextractor": {
    "length": "Minimum string length",
    "max": "Maximum number of results",
    "start": "Start at position",
    "maxexceeded": "Maximum number of results found. Use start position to continue search.",
    "fileerror": "Error loading file."
  },

  "htmlscanner": {
    "short": "Scan the page source for links, images and hidden information",
    "long": "Sometimes information is hidden inside the cache listing using HTML. For example using white or very small text, or marking letters as bold, italic or in some other way. Links can be hidden inside images or in other places. HTML Scanner scans the page source for links, images and hidden information. This tool only works with the official pages from geocaching.com. Copy & paste the page source below.",
    "ph": "Paste the page source here",
    "btnscan": "Scan",
    "links": "Links found - select to open the link",
    "images": "Images found - select to view the image",
    "bgimages": "Background images found - select to view the image",
    "comms": "(Hidden) comments found",
    "white": "White text found",
    "strong": "Strong text",
    "bold": "Bold text",
    "ital": "Italic text",
    "sup": "Superscript text",
    "sub": "Subscript text",
    "size": "Font sized",
    "del": "Deleted text",
    "em": "Emphasized text",
    "nocache": "No cache details found, please load correct page source",
    "complete": "Scan completed, details below (could be none)",
    "error": "Error loading or scanning the page source"
  },

  "sudoku": {
    "error": "Error solving sudoku, too many solutions or server timeout",
    "type": "Sudoku type",
    "size": "Size",
    "alt": "Hints",
    "solve": "Solve",
    "thereare": "There are",
    "sols": "solutions"
  },

  "mmsolver": {
    "npin": "Number of pins",
    "ncolor": "Number of colors",
    "unique": "Colors must be unique",
    "pins": "Tries",
    "pos": "Match location and color",
    "col": "Match color only",
    "invalidhint1": "Try must have the correct number of pins",
    "invalidhint2": "Try has invalid color",
    "invalidhint3": "Number of matches must be less or equal to number of pins"
  },

  "periodictable": {
    "ph": "Type numbers, names or symbols",
    "searchsym": "Search symbols",
    "searchnum": "Search numbers",
    "searchname": "Search names",
    "num": "Number",
    "sym": "Symbol",
    "grp": "Group",
    "prd": "Period",
    "blk": "Block",
    "name": "Name"
  },

  "resistorcode": {
    "band": "Band",
    "mult": "Multiplier",
    "res": "The resistance value is:"
  },

  "decabit": {
    "selenc": "Select encoding",
    "selnum": "Numbers (0 - 126)",
    "selascii": "Text ASCII",
    "selalpha": "Text alphabet (A=1, Z=26)"
  },

  "countries": {
    "ph": "Type multiple codes or numbers",
    "flag": "Flag",
    "ccode3": "ISO 3-letter code",
    "ccode2": "ISO 2-letter code",
    "cnum": "ISO country nr",
    "name": "Country",
    "tel": "Phone",
    "web": "Web TLD",
    "cur": "Currency",
    "ccur": "Currency code",
    "lcp": "License plate",
    "names": {
      "abw": "Aruba",
      "afg": "Afghanistan",
      "ago": "Angola",
      "aia": "Anguilla",
      "ala": "√Öland",
      "alb": "Albania",
      "and": "Andorra",
      "are": "United Arab Emirates",
      "arg": "Argentina",
      "arm": "Armenia",
      "asm": "American Samoa",
      "ata": "Antarctica",
      "atf": "French Southern and Antarctic Lands",
      "atg": "Antigua and Barbuda",
      "aus": "Australia",
      "aut": "Austria",
      "aze": "Azerbaijan",
      "bdi": "Burundi",
      "bel": "Belgium",
      "ben": "Benin",
      "bes": "Caribbean Netherlands",
      "bfa": "Burkina Faso",
      "bgd": "Bangladesh",
      "bgr": "Bulgaria",
      "bhr": "Bahrain",
      "bhs": "The Bahamas",
      "bih": "Bosnia and Herzegovina",
      "blm": "Saint Barth√©lemy",
      "blr": "Belarus",
      "blz": "Belize",
      "bmu": "Bermuda",
      "bol": "Bolivia",
      "bra": "Brazil",
      "brb": "Barbados",
      "brn": "Brunei",
      "btn": "Bhutan",
      "bvt": "Bouvet Island",
      "bwa": "Botswana",
      "caf": "Central African Republic",
      "can": "Canada",
      "cck": "Cocos (Keeling) Islands",
      "che": "Switzerland",
      "chl": "Chili",
      "chn": "China",
      "civ": "Ivory Coast",
      "cmr": "Cameroon",
      "cod": "Democratic Republic of the Congo",
      "cog": "Republic of the Congo",
      "cok": "Cook Islands",
      "col": "Colombia",
      "com": "Comoros",
      "cpv": "Cape Verde",
      "cri": "Costa Rica",
      "cub": "Cuba",
      "cuw": "Cura√ßao",
      "cxr": "Christmas Island",
      "cym": "Cayman Islands",
      "cyp": "Cyprus",
      "cze": "Czech Republic",
      "deu": "Germany",
      "dji": "Djibouti",
      "dma": "Dominica",
      "dnk": "Denmark",
      "dom": "Dominican Republic",
      "dza": "Algeria",
      "ecu": "Ecuador",
      "egy": "Egypt",
      "eri": "Eritrea",
      "esh": "Western Sahara",
      "esp": "Spain",
      "est": "Estonia",
      "eth": "Ethiopia",
      "fin": "Finland",
      "fji": "Fiji",
      "flk": "Falkland Islands",
      "fra": "France",
      "fro": "Faroe Islands",
      "fsm": "Micronesia",
      "gab": "Gabon",
      "gbr": "United Kingdom",
      "geo": "Georgia",
      "ggy": "Guernsey",
      "gha": "Ghana",
      "gib": "Gibraltar",
      "gin": "Guinea",
      "glp": "Guadeloupe",
      "gmb": "The Gambia",
      "gnb": "Guinea-Bissau",
      "gnq": "Equatorial Guinea",
      "grc": "Greece",
      "grd": "Grenada",
      "grl": "Greenland",
      "gtm": "Guatemala",
      "guf": "French Guiana",
      "gum": "Guam",
      "guy": "Guyana",
      "hkg": "Hong Kong",
      "hmd": "Heard Island and McDonald Islands",
      "hnd": "Honduras",
      "hrv": "Croatia",
      "hti": "Haiti",
      "hun": "Hungary",
      "idn": "Indonesia",
      "imn": "Isle of Man",
      "ind": "India",
      "iot": "British Indian Ocean Territory",
      "irl": "Ireland",
      "irn": "Iran",
      "irq": "Iraq",
      "isl": "Iceland",
      "isr": "Israel",
      "ita": "Italy",
      "jam": "Jamaica",
      "jey": "Jersey",
      "jor": "Jordan",
      "jpn": "Japan",
      "kaz": "Kazakhstan",
      "ken": "Kenya",
      "kgz": "Kyrgyzstan",
      "khm": "Cambodia",
      "kir": "Kiribati",
      "kna": "Saint Kitts and Nevis",
      "kor": "South Korea",
      "kwt": "Kuwait",
      "lao": "Laos",
      "lbn": "Lebanon",
      "lbr": "Liberia",
      "lby": "Libya",
      "lca": "Saint Lucia",
      "lie": "Liechtenstein",
      "lka": "Sri Lanka",
      "lso": "Lesotho",
      "ltu": "Lithuania",
      "lux": "Luxembourg",
      "lva": "Latvia",
      "mac": "Macau",
      "maf": "Collectivity of Saint Martin",
      "mar": "Morocco",
      "mco": "Monaco",
      "mda": "Moldova",
      "mdg": "Madagascar",
      "mdv": "Maldives",
      "mex": "Mexico",
      "mhl": "Marshall Islands",
      "mkd": "North Macedonia",
      "mli": "Mali",
      "mlt": "Malta",
      "mmr": "Myanmar",
      "mne": "Montenegro",
      "mng": "Mongolia",
      "mnp": "Northern Mariana Islands",
      "moz": "Mozambique",
      "mrt": "Mauritania",
      "msr": "Montserrat",
      "mtq": "Martinique",
      "mus": "Mauritius",
      "mwi": "Malawi",
      "mys": "Malaysia",
      "myt": "Mayotte",
      "nam": "Namibia",
      "ncl": "New Caledonia",
      "ner": "Niger",
      "nfk": "Norfolk Island",
      "nga": "Nigeria",
      "nic": "Nicaragua",
      "niu": "Niue",
      "nld": "Netherlands",
      "nor": "Norway",
      "npl": "Nepal",
      "nru": "Nauru",
      "nzl": "New Zealand",
      "omn": "Oman",
      "pak": "Pakistan",
      "pan": "Panama",
      "pcn": "Pitcairn Islands",
      "per": "Peru",
      "phl": "Philippines",
      "plw": "Palau",
      "png": "Papua New Guinea",
      "pol": "Poland",
      "pri": "Puerto Rico",
      "prk": "North Korea",
      "prt": "Portugal",
      "pry": "Paraguay",
      "pse": "State of Palestine",
      "pyf": "French Polynesia",
      "qat": "Qatar",
      "reu": "R√©union",
      "rou": "Romania",
      "rus": "Russia",
      "rwa": "Rwanda",
      "sau": "Saudi Arabia",
      "sdn": "Sudan",
      "sen": "Senegal",
      "sgp": "Singapore",
      "sgs": "South Georgia and the South Sandwich Islands",
      "shn": "Saint Helena, Ascension and Tristan da Cunha",
      "sjm": "Svalbard and Jan Mayen",
      "slb": "Solomon Islands",
      "sle": "Sierra Leone",
      "slv": "El Salvador",
      "smr": "San Marino",
      "som": "Somalia",
      "spm": "Saint Pierre and Miquelon",
      "srb": "Serbia",
      "ssd": "South Sudan",
      "stp": "S√£o Tom√© and Pr√≠ncipe",
      "sur": "Suriname",
      "svk": "Slovakia",
      "svn": "Slovenia",
      "swe": "Sweden",
      "swz": "Eswatini",
      "sxm": "Sint Maarten",
      "syc": "Seychelles",
      "syr": "Syria",
      "tca": "Turks and Caicos Islands",
      "tcd": "Chad",
      "tgo": "Togo",
      "tha": "Thailand",
      "tjk": "Tajikistan",
      "tkl": "Tokelau",
      "tkm": "Turkmenistan",
      "tls": "East Timor",
      "ton": "Tonga",
      "tto": "Trinidad and Tobago",
      "tun": "Tunisia",
      "tur": "Turkey",
      "tuv": "Tuvalu",
      "twn": "Taiwan",
      "tza": "Tanzania",
      "uga": "Uganda",
      "ukr": "Ukraine",
      "umi": "United States Minor Outlying Islands",
      "ury": "Uruguay",
      "usa": "United States",
      "uzb": "Uzbekistan",
      "vat": "Vatican City",
      "vct": "Saint Vincent and the Grenadines",
      "ven": "Venezuela",
      "vgb": "British Virgin Islands",
      "vir": "United States Virgin Islands",
      "vnm": "Vietnam",
      "vut": "Vanuatu",
      "wlf": "Wallis and Futuna",
      "wsm": "Samoa",
      "yem": "Yemen",
      "zaf": "South Africa",
      "zmb": "Zambia",
      "zwe": "Zimbabwe"
    }
  },

  "usastates": {
    "ph": "Type searches divided by spaces, for state codes the spaces can be omitted",
    "flag": "Flag",
    "code": "ISO3166:2 code",
    "name": "State",
    "num": "Joined as",
    "reps": "US House reps",
    "area": "Area ranking",
    "cap": "Capital"
  },

  "countryregions": {
    "ph": "Type searches divided by spaces, for codes the spaces can be omitted",
    "list": "Countries",
    "nl": "Netherlands",
    "be": "Belgium",
    "de": "Germany",
    "fr": "France",
    "flag": "Flag",
    "code": "ISO3166:2 code",
    "name": "Province",
    "mun": "#Municipalities",
    "area": "Area ranking",
    "cap": "Capital",
    "cat": "Type of region",
    "dep": "#Departments",
    "arr": "#Arrondisements",
    "canton": "#Cantons",
    "bundesrat": "Bundesrat reps",
    "landkreise": "#Landkreise",
    "stadtkreise": "#Kreisefreie stadt"
  },

  "unitconvertor" : {
    "value": "Value",
    "selcat": "Select a category",
    "unitfrom": "From unit",
    "unitto": "To unit",
    "cat" : {
      "length": {
        "name": "Length & distance",
        "desc": "The standard unit of length is meter (m). All the default prefixes like kilo (1000), hecta (100), deca (10), deci (1/10), centi (1/100) and milli (1/1000) are available. English speaking countries used / uses imperial units (inch, feet, yard, mile). Before the imperial system several other units were in use (e.g. furlong, rond or barleycorn). There are also former French and Russian units."
      },
      "temp": {
        "name": "Temperature",
        "desc": "The standard unit (SI unit) of temperature is Kelvin (K), the absolute zero. Celsius and Fahrenheit are the most frequently used. There is also a number of now obsolete temperature scales."
      },
      "area": {
        "name": "Area",
        "desc": "The standard unit of an area is the square meter (m2). An are is 10mx10m, a hectare 100mx100m. English speaking countries use imperial units like square inch, square feet, square yard and square mile."
      },
      "vol": {
        "name": "Volume",
        "desc": "The standard unit of volume is the cubic meter (m3). The liter (l or dm3) is frequently used. English speaking countries uses imperial measures like the fluid ounce (fl oz). Traditionally different volumes where used for fluid and dry goods, but this no longer the case, except for US customary volumes."
      },
      "power": {
        "name": "Power",
        "desc": "The standard unit of power is the Watt (W)."
      },
      "mass": {
        "name": "Mass & weight",
        "desc": "The standard unit of mass is the kilogram (kg). English speaking countries still use the ounce (oz) and pound (lb). The troy ounce and pound (and carat) are still used for precious stones and metals (troy). The apothecary are mostly replaced with the metric system. There are also old Russian units (before the adoption of the metric system in 1925) and anncient Roman units."
      },
      "angle": {
        "name": "Angle",
        "desc": "The standard unit of angle is radians (rad), but degrees are more commonly used."
      },
      "speed": {
        "name": "Velocity & speed",
        "desc": "The standard unit for speed is meter per second (m/s). English speaking countries still use imperial units such as feet per second (ft/s). The knot is a maritime unit."
      },
      "time": {
        "name": "Time",
        "desc": "The standard unit for time is the second (s). Most of the other units are common as well. When it comes to the exact duration of a year, there are many definitions. The Hebrew calendar also uses a few other definitions."
      }
    }
  },

  "dnacode": {
    "ph": "Type searches, e.g. three letter RNA codes",
    "letter": "Letter",
    "abbr": "Abbr.",
    "aminoacid": "Amino acid",
    "rna": "RNA codons",
    "dna": "DNA codons"
  },

  "dialogpb":{
    "title": "Polybius square",
    "start": "Start with alphabet:",
    "key": "Key",
    "dir": "Direction",
    "corner": "Start",
    "flip": "Flip row/col",
    "d": {
      "hor": "Horizontal",
      "ver": "Vertical",
      "diah": "Diagonal left right",
      "diav": "Diagonal top down",
      "si": "Spiral inwards"
    },
    "c": {
      "tl": "Top left",
      "tr": "Top right",
      "bl": "Bottom left",
      "br": "Bottom right"
    }
  },

  "dialogmap": {
    "getloc": "Get location",
    "mapstyle": "Map style",
    "street": "Streets",
    "satellite": "Satellite",
    "satstreet": "Satellite/Street",
    "outdoors": "Outdoors",
    "light": "Light",
    "dark": "Dark",
    "hikebike": "Hike & bike",
    "transport": "Public transport",
    "cyclemap": "Cycle map",
    "landscape": "Landscape",
    "outdoors2": "Hiking routes"
  },

  "cdconvert": {
    "proj4jsmsg": "You can convert any coordinate system using the definition below. The convertor uses Proj4js. First select Proj4js from the dropdown. The definition to use can be found on <a href='http://epsg.io'>EPSG.io</a>. Take the Proj4js.def (it can be found near the bottom of the page). Take the second string (the one that starts with +) without the quotes and copy / paste it in the field below.",
    "proj4jslabel": "Proj4js definition",
    "phfrom": "Coordinates to convert",
    "phto": "Converted coordinates"
  },

  "cdproj": {
    "projcoord": "The projected coordinate is ",
    "startpoint": "Starting point",
    "projpoint": "Projected point"
  },

  "cdmapmaker": {
    "phcoord": "Coordinates go here",
    "phlabel": "Labels go here",
    "showmark": "Show markers",
    "showlabel": "Show marker labels",
    "drawcircle": "Draw circles",
    "makemap": "Make map",
    "error1": "Number of coordinates and labels must match"
  },

  "cdincomplete": {
    "error1": "Maximum number of coordinates is 500. Reduce the number of options."
  },

  "cdlines": {
    "calc1": "Calculate distance, direction and midpoint (uses coordinate 1 & 2)",
    "calc2": "Calculate point nearest to Point 3 on line thru Point 1 and Point 2.",
    "calc3": "Get intersection of lines thru Point 1 and 2 and Point 3 and 4",
    "midpoint": "Midpoint",
    "distance": "The distance is: ",
    "direction": "The direction is: ",
    "pointnearest": "Point nearest: ",
    "intersection": "Intersection: "
  },

  "cdtriangles": {
    "centroid": "Centroid",
    "orthocenter": "Orthocenter",
    "incenter": "Incenter",
    "circumcenter": "Circumcenter",
    "ninepoint": "Ninepointcenter",
    "or": " or "
  },

  "cdcircles": {
    "ip": "Intersection point",
    "ia": "Intersection area",
    "ni": "No intersection",
    "distance": "Distance between intersection points",
    "or": " or ",
    "surf": "Surface of circle ",
    "circ": "Circumference of circle "
  },

  "cdantipode": {
    "result": "The antipode coordinate is ",
    "or": " or "
  },

  "cdw3w" : {
    "languages": "Available languages",
    "convertto": "Convert to w3w",
    "convertfrom": "Convert to ...",
    "suggest": "Show suggestions",
    "w3wcode": "What3words coordinate",
    "w3wsugg": "What3words suggestion",
    "countries": "Clip to country",
    "focus": "Focus on coordinate",
    "clip": "Clip to circle",
    "words": "Words",
    "country": "Country",
    "nearest": "Nearest place"
  },

  "txtwordval": {
    "reverse": "Reverse order Z‚ÜíA",
    "startzero": "Start at zero (A=0 or Z=0 with reverse)",
    "replacediac": "Replace diacritics",
    "showhide": "Show/hide alphabet",
    "someinfo": "Some information on alphabets",
    "someinfo2": "<p>The calculator uses the official alphabets. So in some languages diacritics are separate letters in the alphabet (e.g. √Ñ in German or √Ö in Swedish) and in some languages they represent the original letter (e.g. √© or √¥ in French). The <b>remove diacritics</b> however is merciless and replaces all diacritics, which is okay in most cases. But for languages were diacritics are separate letters (like German or Swedish) you better not use Remove Diacritics.</p><p>The Greek and Cyrillic (such as Russian) alphabets have characters that look exactly like their Western versions, such as A or B. But they are different, they have different character codes. When typed with a Western keyboard they will still resolve to a value of zero. If you would copy for example place names from Wikipedia (e.g. –ê–º—Å—Ç–µ—Ä–¥–∞–º) the right symbols are used and the values are calculated correctly.</p><p>The Scrabble values used are those of the latest known version. There are quite a few other versions out there. If you want the values of one those, you can find them on <a href='https://en.wikipedia.org/wiki/Scrabble_letter_distributions'>Wikipedia</a>, but you have to do the hard work yourself.</p>"
  },

  "txtcodes": {
    "info": "Computers don't know letters they only know numbers. These numbers are converted into characters using codepages. There are hundreds of codepages. This tool handles quite a few, including the infamous alt-codes.",
    "input": "Type of input",
    "output": "Requested output",
    "someinfo": "Information on character codes",
    "someinfo2": "<p>Computers are binary, they only know 0 and 1. These can be converted into a decimal numbers of course. This tool also accepts octal, decimal and hexadecimal which are all common among computer programmers. As a bonus the tool converts between these number bases as well. These numbers are used to lookup the right character (glyph in nerd speak) in the so-called codepage.</p><p>The very first computer codepage was ASCII and it has been around ever since. It is a subset of the codepages in MS DOS and Windows and is also a subset of UTF. ASCII only had 7-bits (128 characters) available. The codepages from Microsoft used 8 bits (e.g. CP437, CP850, CP1252), 256 characters. In languages with other characters different codepages had to be used. With the introduction of UTF-8/16 this changed. With only one codepage there is enough room to support all characters on earth, as well as emoji's ;-). <strong>Alt codes</strong>: depending on the version of MS DOS or MS Windows and the installed codepage typing the numbers on the numeric keypad with the Alt-key down produced a special character.</p><p>For a history of all the characters sets used in information systems see <a href='https://en.wikipedia.org/wiki/List_of_information_system_character_sets'>Wikipedia's history of information system character sets</a>. See <a href='https://en.wikipedia.org/wiki/Code_page'>Wikipedia codepages</a> for an overview of all the codepages that ever existed.</p><p>In pre computer days telegraph and telex also used binary representations, which are called the Baudot code (ITA-1) and the Murray code (ITA-2). The bits are in the order 54321 normally and in the order 12345 for the reversed codes. There is also a Russin version known as MTK-2. More info see <a href='https://en.wikipedia.org/wiki/Baudot_code>Wikipedia</a>.</p>"
  },

  "txtsr": {
    "errorlength": "From / to must have same length",
    "errordouble": "Double characters found",
    "highlight": "Highlight",
    "orig": "Original letters",
    "repl": "Substitutes",
    "casesens": "Case sensitive",
    "get": "Get hints",
    "apply": "Apply hints"
  },

  "txtanalyze": {
    "analyze": "Analyze text",
    "result": "Table with counts and percentages comes here",
    "nwords": "Number of words",
    "nlines": "Number of lines",
    "nchar": "Number of characters",
    "nalpha": "Number of alphabetic characters (A to Z, a to z)",
    "ndigit": "Number of digits (0 to 9)",
    "nwhite": "Number of white space characters (spaces, tabs and linefeeds)",
    "nupper": "Number of uppercase characters (A to Z)",
    "nlower": "Number of lowercase characters (a to z)",
    "nnonalpha": "Number of non alphabetic characters",
    "nnonwhite": "Number of non white space",
    "letter": "Letter",
    "digit": "Digit",
    "symbol": "Symbol",
    "count": "Count",
    "perc": "Percentage",
    "upper": "upper",
    "lower": "lower"
  },

  "txttonum": {
    "leadzero": "Always use leading zero below 10",
    "btnttn": "Text to numbers",
    "btnntt": "Numbers to text"
  },

  "txtkeyb": {
    "inputkb": "Input keyboard",
    "outputkb": "Output keyboard",
    "error": "Keyboard could not be converted, please check"
  },

  "txttoss": {
    "mode": "Select how to toss words",
    "mode3": "Keep first and last letter (typoglycemia)",
    "mode2": "Keep first letter",
    "mode1": "Keep none of the letters"
  },

  "mathbase": {
    "base1": "Base left (2 to 36)",
    "base2": "Base right (2 to 36)"
  },

  "mathdeci": {
    "sel": "Select a number",
    "pi": "œÄ or pi, starts with 3.141592653589...",
  	"e": "e, starts with 2.718281828459...",
    "tau": "ùúè, tau or 2*œÄ, starts with 6.2831853071...",
    "phi": "œÜ or phi or the golden ratio, starts with 1.61803398874989...",
    "euler": "Œ≥ or the Euler‚ÄìMascheroni constant, starts with 0.577215664901...",
    "sq2": "‚àö2, starts with 1.414213562373095...",
    "sq3": "‚àö3, starts with 1.7320508075...",
    "zeta3": "Œ∂(3) or zeta(3) or Ap√©ry's constant, starts with 1.202056903...",
    "gauss": "Gauss's constant, starts with 0.8346268416...",
    "lemni": "Lemniscate constant, starts with 5.2441151085...",
    "cat": "Catalan's constant, starts with 0.915965594... ",
    "champ": "Champernowne constant, starts with 0.12345678910111213...",
    "from": "From digit",
    "to": "to digit",
    "get": "Get digits",
    "res1": "The digits from ",
    "res2": "to",
    "res3": "are"
  },

  "mathprime" : {
    "check": "Check if this is a prime",
    "pos": "Get prime at position",
    "primepos": "Get position of prime",
    "primefact": "Prime factors of",
    "toobig": "Number is too big",
    "isprime": "is a prime number",
    "isnotprime": "is not a prime number",
    "primeatpos": "The prime number at position",
    "primeis": "is",
    "primenotfound": "Prime number not found",
    "posofprime": "The position of prime"
  },

  "mathroman" : {
    "btndtr": "Decimal to Roman",
    "btnrtd": "Roman To Decimal",
    "notroman": "Invalid roman number, only MDCLXVI are allowed",
    "invalidint": "Invalid number, the maximum roman number is 3999"
  },

  "mathfib": {
    "pos": "Fibonacci number at position",
    "check": "Check if this is a Fibonaci number",
    "toobig": "Position too big (max 500)",
    "errorzero": "Position must be greater than zero",
    "the": "The ",
    "nth": "th Fibonacci number is ",
    "not": " not",
    "fib": " a Fibonacci number"
  },

  "mathgcd": {
    "num": "Numbers",
    "inperror": "Invalid input, must be a number and greater than zero",
    "t1": "Greatest Common Divisor (GCD) & Least Common Multiple (LCM)",
    "t2": "Prime factors",
    "gcd": "The GCD is ",
    "lcm": "The LCM is"
  },

  "mathcrypta": {
    "formula": "Formula",
    "unique": "Unique numbers",
    "base": "Base for calculations",
    "nosol": "There are no solutions",
    "exprerror": "Error evaluating expression, please check the formula",
    "toomanyvars": "Too many variables, increase base or change formule"
  },

  "mathnim": {
    "num1": "First number",
    "num2": "Second number",
    "t1": "Product & sum",
    "prod": "The nimber product is",
    "sum": "The nimber sum is"
  },

  "bignum": {
    "selnum": "Number base",
    "num1": "Number A",
    "num2": "Number B",
    "decimal": "Decimal",
    "binary": "Binary",
    "octal": "Octal",
    "hexadecimal": "Hexadecimal",
    "arithmetic": "Arithmetic operations",
    "logical": "Logical operations"
  },

  "mathpali": {
    "t1": "Palindrome",
    "res1": "It takes",
    "res2": "iterations to become a palindrome.",
    "res3": "The sequence is",
    "toomany": "More than 100 iterations are needed"
  },

  "mathprop": {
    "num": "Number to check",
    "t1": "Properties",
    "even": "Even: numbers divisable by 2",
    "odd": "Odd: numbers not divisable by 2",
    "prime": "Prime: A natural number greater than 1 that is not a product of two smaller natural numbers",
    "fib": "Fibonacci: Sequence, each number is the sum of the previous two. It starts with 1, 1, 2, 3, ...",
    "comp": "Composite: Numbers n of the form x*y for x > 1 and y > 1",
    "bi": "Biprime: Numbers which are the product of exactly two primes",
    "niven": "Niven or Harshad: Numbers which are divisable by the sum of their digits",
    "sqfree": "Squarefree: Number not divisable for square > 1",
    "evil": "Evil: Binary representation has even number of ones",
    "odious": "Odious: Binary representation has odd number of ones",
    "perfect": "Perfect: Sigma(n) = 2n, where sigma(n) is the sum of the divisors of n",
    "defi": "Deficient: Sigma(n) < 2n, where sigma(n) is the sum of the divisors of n",
    "abun": "Abundant: Sigma(n) > 2n, where sigma(n) is the sum of the divisors of n",
    "narc": "Narcistic: Sum of digits ** (#digits) equals n",
    "pow": "Powerful: For every prime p dividing n, p**2 also divides n",
    "lucky": "Lucky: see https://en.wikipedia.org/wiki/Lucky_number for an explanation",
    "happy": "Happy: see https://en.wikipedia.org/wiki/Happy_number for an explanation",
    "asp": "Aspiring: see https://oeis.org/A063769 Online Encyclopedia of Integer Sequences for an explanation",
    "penta": "Pentagonal: one of the sequence generated with a(n) = n*(3*n-1)/2",
    "toobig": "Number must be smaller than 1,000,000,000"
  },

  "mathseq": {
    "sel": "Select a sequence",
    "conway": "Conway sequence a.k.a. the hear and say sequence",
    "revconway": "Reverse Conway sequence a.k.a. the hear and say sequence",
    "hailstone": "Hailstone sequence, if n is even n/2, if n is odd 3n+1",
    "niven": "Niven, numbers who are divisable by the sum of their digits",
    "abundant": "Abundant, numbers where the sum of divisors is greater than the number",
    "deficient": "Deficient, numbers where the sum of divisors is less than the number",
    "golomb": "Golomb, the nth term is equal to the number of times n appears in the sequence",
    "niter": "Number of iterations",
    "start": "Start with",
    "res1": "The number on position",
    "res2": "The sequence is"
  },

  "compbf": {
    "vars" : "Select programming language",
    "shorthand" : "Shorthand notation",
    "code": "Program code",
    "input": "Input variables",
    "run": "Run code",
    "debug": "Debug to console"
  },

  "compbcd": {
    "bcdfrom": "BCD to numbers",
    "bcdto": "Numbers to BCD",
    "packed": "Packed BCD",
    "fill": "Fill with"
  },

  "compbintotext": {
    "selfrom": "Encoding from",
    "selfromtable": "Encoding table",
    "selto": "Encoding to",
    "seltotable": "Encoding table"
  },

  "compds": {
    "invalidint": " is not valid number\n",
    "format": "Input/output format",
    "ascii": "Text (ASCII)",
    "hex": "Hexadecimal",
    "dec": "Numbers (decimal",
    "invalidcmd": " it not duckspeak\n"
  },

  "compenc": {
    "codes": "Select encryption",
    "key": "Key",
    "coded": "Coded message",
    "advanced": "Advanced options",
    "modes": "Mode",
    "padding": "Padding",
    "keytooshort": "Key for Okto3 needs to be at least 10 characters"
  },

  "comphash": {
    "hashes": "Select hash",
    "hash": "Hash comes here",
    "verify": "Enter a hash here to verify message",
    "errorok": "Hash is correct, message is okay",
    "errornok": "Hash is incorrect, message is corrupted"
  },

  "dialogabout": {
    "info": "This page is only available in English."
  },

  "dialoghowto": {
    "info": "This page is only available in English."
  }

}
